abiflags: any
def addaudithook(hook):
    pass
argv: any
def audit(event, *args):
    pass
base_exec_prefix: any
base_prefix: any
byteorder: any
builtin_module_names: any
def call_tracing(func, args):
    pass
copyright: any
def _clear_type_cache():
    pass
def _current_frames():
    pass
def _current_exceptions():
    pass
def breakpointhook():
    pass
def _debugmallocstats():
    pass
dllhandle: any
def displayhook(value):
    pass
dont_write_bytecode: any
_emscripten_info: any
pycache_prefix: any
def excepthook(type, value, traceback):
    pass
__breakpointhook__: any
__displayhook__: any
__excepthook__: any
__unraisablehook__: any
def exception():
    pass
def exc_info():
    pass
exec_prefix: any
executable: any
def exit(*args):
    pass
flags: any
float_info: any
float_info.dig: any
float_repr_style: any
def getallocatedblocks():
    pass
def getunicodeinternedsize():
    pass
def getandroidapilevel():
    pass
def getdefaultencoding():
    pass
def getdlopenflags():
    pass
def getfilesystemencoding():
    pass
def getfilesystemencodeerrors():
    pass
def get_int_max_str_digits():
    pass
def getrefcount(object):
    pass
def getrecursionlimit():
    pass
def getsizeof(object):
    pass
def getswitchinterval():
    pass
def _getframe(depth):
    pass
def _getframemodulename(*args):
    pass
def getprofile():
    pass
def gettrace():
    pass
def getwindowsversion():
    pass
def get_asyncgen_hooks():
    pass
def get_coroutine_origin_tracking_depth():
    pass
hash_info: any
hexversion: any
implementation: any
int_info: any
__interactivehook__: any
def intern(string):
    pass
def is_finalizing():
    pass
last_exc: any
last_type: any
last_value: any
last_traceback: any
maxsize: any
maxunicode: any
meta_path: any
modules: any
orig_argv: any
path: any
path_hooks: any
path_importer_cache: any
platlibdir: any
prefix: any
ps1: any
ps2: any
def setdlopenflags(n):
    pass
def set_int_max_str_digits(maxdigits):
    pass
def setprofile(profilefunc):
    pass
def setrecursionlimit(limit):
    pass
def setswitchinterval(interval):
    pass
def settrace(tracefunc):
    pass
def set_asyncgen_hooks(*args):
    pass
def set_coroutine_origin_tracking_depth(depth):
    pass
def activate_stack_trampoline(backend, /):
    pass
def deactivate_stack_trampoline():
    pass
def is_stack_trampoline_active():
    pass
def _enablelegacywindowsfsencoding():
    pass
stdin: any
stdout: any
stderr: any
__stdin__: any
__stdout__: any
__stderr__: any
stdlib_module_names: any
thread_info: any
tracebacklimit: any
def unraisablehook(unraisable, /):
    pass
def unraisablehook():
    pass
version: any
api_version: any
version_info: any
warnoptions: any
winver: any
monitoring: any
_xoptions: any
