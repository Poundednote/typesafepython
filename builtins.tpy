def abs(x):
    pass
def aiter(async_iterable):
    pass
def all(iterable):
    pass
def anext(async_iterator, default): # last optional
    pass
def any(iterable):
    pass
def ascii(object):
    pass
def bin(x):
    pass
def bool(object=False, /):
    pass
def breakpoint(*args, **kwargs):
    pass
def bytearray(): # last 2 optional
    pass
def bytes(): # same like above
    pass
def callable(object):
    pass
def chr(i):
    pass
class classmethod():
    def __init__(callable):
        pass

def compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1):
    pass
def complex(number=0):
    pass
def delattr():
    pass
def dict():
    pass
def dir():
    pass
def divmod():
    pass
def enumerate():
    pass
def eval():
    pass
def exec():
    pass
def filter():
    pass
def float():
    pass
def format():
    pass
def frozenset():
    pass
def getattr():
    pass
def globals():
    pass
def hasattr(cls, name):
    pass
def hash():
    pass
def help():
    pass
def hex():
    pass
def id():
    pass
def input():
    pass
def int():
    pass
def isinstance():
    pass
def issubclass():
    pass
def iter():
    pass
def len():
    pass
def list():
    pass
def locals():
    pass
def map():
    pass
def max():
    pass
def memoryview():
    pass
def min():
    pass
def next():
    pass
def object():
    pass
def oct():
    pass
def open():
    pass
def ord():
    pass
def pow():
    pass
def print(str):
    pass
def property():
    pass
def range():
    pass
def repr():
    pass
def reversed():
    pass
def round():
    pass
def set():
    pass
def setattr():
    pass
def slice():
    pass
def sorted():
    pass
class staticmethod():
    def __init__(callable):
        pass
def str():
    pass
def sum():
    pass
def super():
    pass
def tuple():
    pass
def type(x):
    pass
def vars():
    pass
def zip():
    pass
def __import__():
    pass
